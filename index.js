const {modifyColumnName,convertDataType,splitData, deleteColumn, handleMissingValues, detectAndHandleOutliers, normalizeData, encodeCategorical, cleanData, getColumnNames,getDimensions ,getNullValues,slice,transpose,skewness,kurtosis,sum,sumRow,deviation,variance,covariance,stdev} = require('./utils/dataPreprocessing');
const { selectFeatures, CorrelationMatrix, chiSquareTest,anovaFTest,tTest,varianceThreshold,lassoRegularization,ridgeRegularization,elasticNetRegularization,informationGain,giniIndex } = require('./utils/featureSelection');
const { transformData } = require('./utils/dataTransformation');
const { handleImbalance } = require('./utils/handlingImbalance');
//const { extractFeatures } = require('./utils/featureExtraction');
const { plotGraph } = require('./utils/plots');
const { exportToHTML, exportToJSON, exportToPDF } = require('./utils/exports');
const {readCSV} = require('./utils/csvReader');
const { linearRegression,
  logisticRegression,
  decisionTrees,
  randomForests,
  kNearestNeighbors,
  naiveBayes,
  gradientBoosting,
 // lightGBM,
  //neuralNetworks,
  //ensembleMethods,
  generalPredict,svm,
  adaBoost,
  //stacking,
  votingClassifier}=require('./utils/supervisedAlgo');

  const {kMeans, //pca,
    hierarchicalClustering,
    dbscan,
  }=require('./utils/unsupervisedAlgo');

const { accuracy,
  precision,
  recall,
  f1Score,
  confusionMatrix,
  specificity,
  falsePositiveRate,
  trueNegativeRate,
  areaUnderROC,
  meanSquaredError,
  rootMeanSquaredError,
  meanAbsoluteError,
  rSquared,kFoldCrossValidation,
  stratifiedKFoldCrossValidation,} = require('./utils/metrics');

module.exports = {
  adaBoost,
  //stacking,
  votingClassifier,
  accuracy,
  precision,
  recall,
  f1Score,
  confusionMatrix,
  specificity,
  falsePositiveRate,
  trueNegativeRate,
  areaUnderROC,
  meanSquaredError,
  rootMeanSquaredError,
  meanAbsoluteError,
  rSquared,
  kFoldCrossValidation,
  stratifiedKFoldCrossValidation,
  hierarchicalClustering,
    dbscan,
  kMeans,
 // pca,
  svm,
  generalPredict,
  linearRegression,
  logisticRegression,
  decisionTrees,
  randomForests,
  kNearestNeighbors,
  naiveBayes,
  gradientBoosting,
  //lightGBM,
  //neuralNetworks,
  //ensembleMethods,
  plotGraph,
  slice,transpose,skewness,kurtosis,sum,sumRow,deviation,variance,covariance,stdev,
  chiSquareTest,anovaFTest,tTest,varianceThreshold,lassoRegularization,ridgeRegularization,elasticNetRegularization,informationGain,giniIndex ,
  CorrelationMatrix,
  modifyColumnName,convertDataType,splitData,
  deleteColumn,
  getNullValues,
  getColumnNames,
  getDimensions,
  handleMissingValues,
  detectAndHandleOutliers,
  normalizeData,
  encodeCategorical,
  cleanData,
  selectFeatures,
  transformData,
  handleImbalance,
  //extractFeatures,
  //createPlots,
  exportToHTML,
  exportToJSON,
  exportToPDF,
  readCSV,
};
